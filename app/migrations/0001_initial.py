# Generated by Django 5.2.4 on 2025-07-22 06:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.CharField(max_length=150, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('admin_level', models.CharField(choices=[('district', 'District'), ('division', 'Division'), ('region', 'Region'), ('central', 'Central')], default='district', max_length=10)),
                ('assigned_area', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=10)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_image', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin_user',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'divisions',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('form_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in-progress', 'In Progress'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'forms',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('answer_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('yesno', 'Yes/No'), ('choice', 'Choice')], max_length=10)),
                ('is_required', models.BooleanField(default=False)),
                ('display_order', models.IntegerField()),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='RawImport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('original_id', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('school', models.CharField(blank=True, max_length=100, null=True)),
                ('school_id', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'raw_imports',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_order', models.IntegerField()),
            ],
            options={
                'db_table': 'categories',
                'indexes': [models.Index(fields=['display_order'], name='idx_categories_order')],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('division', models.ForeignKey(db_column='division_id', on_delete=django.db.models.deletion.CASCADE, to='app.division')),
            ],
            options={
                'db_table': 'districts',
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('edit', 'Edit'), ('delete', 'Delete')], max_length=10)),
                ('old_value', models.JSONField(blank=True, null=True)),
                ('new_value', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.question')),
            ],
            options={
                'db_table': 'audit_trail',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('response', models.TextField(blank=True, null=True)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('form', models.ForeignKey(db_column='form_id', on_delete=django.db.models.deletion.CASCADE, to='app.form')),
                ('question', models.ForeignKey(db_column='question_id', on_delete=django.db.models.deletion.CASCADE, to='app.question')),
            ],
            options={
                'db_table': 'answers',
            },
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('choice_id', models.AutoField(primary_key=True, serialize=False)),
                ('choice_text', models.CharField(max_length=255)),
                ('question', models.ForeignKey(db_column='question_id', on_delete=django.db.models.deletion.CASCADE, to='app.question')),
            ],
            options={
                'db_table': 'question_choices',
            },
        ),
        migrations.AddField(
            model_name='division',
            name='region',
            field=models.ForeignKey(db_column='region_id', on_delete=django.db.models.deletion.CASCADE, to='app.region'),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('school_name', models.CharField(max_length=100)),
                ('school_id', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(db_column='district_id', on_delete=django.db.models.deletion.CASCADE, to='app.district')),
                ('division', models.ForeignKey(db_column='division_id', on_delete=django.db.models.deletion.CASCADE, to='app.division')),
                ('region', models.ForeignKey(db_column='region_id', on_delete=django.db.models.deletion.CASCADE, to='app.region')),
            ],
            options={
                'db_table': 'schools',
            },
        ),
        migrations.CreateModel(
            name='SubSection',
            fields=[
                ('sub_section_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_order', models.IntegerField()),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='app.category')),
            ],
            options={
                'db_table': 'sub_sections',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('display_order', models.IntegerField()),
                ('sub_section', models.ForeignKey(db_column='sub_section_id', on_delete=django.db.models.deletion.CASCADE, to='app.subsection')),
            ],
            options={
                'db_table': 'topics',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(db_column='topic_id', on_delete=django.db.models.deletion.CASCADE, to='app.topic'),
        ),
        migrations.CreateModel(
            name='UsersSchool',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('role', models.CharField(choices=[('school', 'School')], max_length=10)),
                ('school_name', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, db_column='district_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.district')),
                ('division', models.ForeignKey(blank=True, db_column='division_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.division')),
                ('region', models.ForeignKey(blank=True, db_column='region_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.region')),
                ('school', models.ForeignKey(blank=True, db_column='school_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.school')),
            ],
            options={
                'db_table': 'users_school',
            },
        ),
        migrations.AddField(
            model_name='form',
            name='school',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, to='app.usersschool'),
        ),
        migrations.AddIndex(
            model_name='district',
            index=models.Index(fields=['division'], name='district_division_id_idx'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['form'], name='idx_answers_form'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['question'], name='idx_answers_question'),
        ),
        migrations.AddIndex(
            model_name='questionchoice',
            index=models.Index(fields=['question'], name='questionchoice_question_id_idx'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['region'], name='division_region_id_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['district'], name='school_district_id_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['division'], name='school_division_id_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['region'], name='school_region_id_idx'),
        ),
        migrations.AddIndex(
            model_name='subsection',
            index=models.Index(fields=['category'], name='subsection_category_id_idx'),
        ),
        migrations.AddIndex(
            model_name='subsection',
            index=models.Index(fields=['display_order'], name='idx_sub_sections_order'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['sub_section'], name='topic_sub_section_id_idx'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['display_order'], name='idx_topics_order'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['topic'], name='question_topic_id_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['display_order'], name='idx_questions_order'),
        ),
        migrations.AddIndex(
            model_name='usersschool',
            index=models.Index(fields=['region'], name='userschool_region_id_idx'),
        ),
        migrations.AddIndex(
            model_name='usersschool',
            index=models.Index(fields=['division'], name='userschool_division_id_idx'),
        ),
        migrations.AddIndex(
            model_name='usersschool',
            index=models.Index(fields=['district'], name='userschool_district_id_idx'),
        ),
        migrations.AddIndex(
            model_name='usersschool',
            index=models.Index(fields=['school'], name='userschool_school_id_idx'),
        ),
        migrations.AddIndex(
            model_name='form',
            index=models.Index(fields=['school'], name='form_school_id_idx'),
        ),
    ]
