# Generated by Django 5.2.4 on 2025-01-27 12:00

from django.db import migrations


def clean_legacy_tables(apps, schema_editor):
    """Clean up legacy tables and columns completely"""
    connection = schema_editor.connection
    with connection.cursor() as cursor:
        # 1) Drop foreign key constraints that reference sub_sections
        try:
            cursor.execute("""
                SELECT CONSTRAINT_NAME
                FROM information_schema.KEY_COLUMN_USAGE
                WHERE TABLE_SCHEMA = DATABASE()
                  AND TABLE_NAME = 'topics'
                  AND COLUMN_NAME = 'sub_section_id'
                  AND REFERENCED_TABLE_NAME = 'sub_sections'
            """)
            for (constraint_name,) in cursor.fetchall() or []:
                try:
                    cursor.execute(f"ALTER TABLE topics DROP FOREIGN KEY `{constraint_name}`")
                except Exception:
                    pass
        except Exception:
            pass

        # 2) Drop indexes on sub_section_id
        try:
            cursor.execute("DROP INDEX IF EXISTS idx_topics_subsection_display ON topics")
        except Exception:
            pass
        try:
            cursor.execute("DROP INDEX IF EXISTS idx_topics_sub_section ON topics")
        except Exception:
            pass
        try:
            cursor.execute("DROP INDEX IF EXISTS sub_section_id ON topics")
        except Exception:
            pass

        # 3) Drop sub_section_id column from topics
        try:
            cursor.execute("ALTER TABLE topics DROP COLUMN sub_section_id")
        except Exception:
            pass

        # 4) Drop legacy tables
        try:
            cursor.execute("DROP TABLE IF EXISTS sub_questions")
        except Exception:
            pass
        try:
            cursor.execute("DROP TABLE IF EXISTS sub_sections")
        except Exception:
            pass

        # 5) Ensure proper foreign key constraint for topics.category_id
        try:
            cursor.execute("""
                ALTER TABLE topics
                ADD CONSTRAINT topics_category_id_fk
                FOREIGN KEY (category_id)
                REFERENCES categories(category_id)
                ON DELETE CASCADE
            """)
        except Exception:
            pass


def reverse_clean_legacy_tables(apps, schema_editor):
    """Reverse operation - not implemented as we don't want to restore legacy tables"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_reindex_categories_topics_questions'),
    ]

    operations = [
        migrations.RunPython(clean_legacy_tables, reverse_clean_legacy_tables),
    ]
