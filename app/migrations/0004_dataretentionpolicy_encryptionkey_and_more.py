# Generated by Django 5.2.4 on 2025-08-11 05:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_subquestion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(max_length=50)),
                ('retention_period_days', models.IntegerField()),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('legal_basis', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'data_retention_policies',
            },
        ),
        migrations.CreateModel(
            name='EncryptionKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.CharField(max_length=50, unique=True)),
                ('key_purpose', models.CharField(max_length=100)),
                ('encrypted_key', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('rotation_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Encryption Key',
                'verbose_name_plural': 'Encryption Keys',
                'db_table': 'encryption_keys',
            },
        ),
        migrations.AlterField(
            model_name='question',
            name='answer_type',
            field=models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('percentage', 'Percentage')], max_length=10),
        ),
        migrations.CreateModel(
            name='AccountLockout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('locked_at', models.DateTimeField(auto_now_add=True)),
                ('unlock_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('unlock_token', models.CharField(blank=True, max_length=100, null=True)),
                ('locked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_accounts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'account_lockouts',
                'ordering': ['-locked_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('gdpr', 'GDPR Compliance Report'), ('security_audit', 'Security Audit Report'), ('data_access', 'Data Access Report'), ('user_activity', 'User Activity Report'), ('incident_summary', 'Security Incident Summary')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('report_data', models.JSONField(default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_encrypted', models.BooleanField(default=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSubjectRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_type', models.CharField(choices=[('access', 'Data Access Request'), ('rectification', 'Data Rectification'), ('erasure', 'Data Erasure (Right to be Forgotten)'), ('portability', 'Data Portability'), ('restriction', 'Restriction of Processing'), ('objection', 'Objection to Processing')], max_length=15)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=15)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('verification_token', models.CharField(max_length=100, unique=True)),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_subject_requests',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='EncryptedFormData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_id', models.CharField(max_length=50)),
                ('question_id', models.CharField(max_length=50)),
                ('encrypted_data', models.TextField()),
                ('encryption_key_id', models.CharField(max_length=50)),
                ('data_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'encrypted_form_data',
                'indexes': [models.Index(fields=['form_id', 'question_id'], name='encrypted_f_form_id_af8dc3_idx'), models.Index(fields=['encryption_key_id'], name='encrypted_f_encrypt_d2d653_idx')],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('success', models.BooleanField()),
                ('failure_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('blocked', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'login_attempts',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['username', 'timestamp'], name='login_attem_usernam_ece61f_idx'), models.Index(fields=['ip_address', 'timestamp'], name='login_attem_ip_addr_340a7c_idx'), models.Index(fields=['success', 'timestamp'], name='login_attem_success_f3dfbd_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('failed_login', 'Multiple Failed Logins'), ('suspicious_activity', 'Suspicious Activity'), ('data_breach', 'Potential Data Breach'), ('unauthorized_access', 'Unauthorized Access'), ('system_compromise', 'System Compromise'), ('policy_violation', 'Policy Violation')], max_length=25)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('affected_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'security_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityIncident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('incident_type', models.CharField(choices=[('brute_force', 'Brute Force Attack'), ('suspicious_login', 'Suspicious Login'), ('data_breach', 'Data Breach'), ('unauthorized_access', 'Unauthorized Access'), ('malware', 'Malware Detection'), ('phishing', 'Phishing Attempt'), ('ddos', 'DDoS Attack'), ('privilege_escalation', 'Privilege Escalation'), ('data_exfiltration', 'Data Exfiltration'), ('other', 'Other')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='open', max_length=15)),
                ('ip_addresses', models.JSONField(blank=True, default=list)),
                ('detection_time', models.DateTimeField(auto_now_add=True)),
                ('resolution_time', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('automated_response', models.BooleanField(default=False)),
                ('affected_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'security_incidents',
                'ordering': ['-detection_time'],
            },
        ),
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_key', models.CharField(max_length=100, unique=True)),
                ('setting_value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_encrypted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Security Setting',
                'verbose_name_plural': 'Security Settings',
                'db_table': 'security_settings',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('create', 'Create Record'), ('read', 'Read Record'), ('update', 'Update Record'), ('delete', 'Delete Record'), ('export', 'Data Export'), ('import', 'Data Import'), ('permission_change', 'Permission Change'), ('security_change', 'Security Setting Change'), ('failed_login', 'Failed Login Attempt'), ('password_change', 'Password Change'), ('account_lock', 'Account Locked'), ('account_unlock', 'Account Unlocked'), ('data_access', 'Sensitive Data Access'), ('backup', 'Data Backup'), ('restore', 'Data Restore')], max_length=20)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('encrypted_data', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='audit_logs_user_id_88267f_idx'), models.Index(fields=['action_type', 'timestamp'], name='audit_logs_action__11f9f1_idx'), models.Index(fields=['severity', 'timestamp'], name='audit_logs_severit_549d29_idx'), models.Index(fields=['ip_address', 'timestamp'], name='audit_logs_ip_addr_932507_idx'), models.Index(fields=['resource_type', 'resource_id'], name='audit_logs_resourc_bda8a6_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataProcessingConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type', models.CharField(choices=[('data_processing', 'Data Processing'), ('marketing', 'Marketing Communications'), ('analytics', 'Analytics'), ('third_party', 'Third Party Sharing')], max_length=20)),
                ('granted', models.BooleanField()),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('consent_text', models.TextField()),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_processing_consent',
                'unique_together': {('user', 'consent_type', 'version')},
            },
        ),
        migrations.CreateModel(
            name='TwoFactorAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('totp', 'Time-based OTP (Authenticator App)'), ('sms', 'SMS'), ('email', 'Email'), ('backup_codes', 'Backup Codes')], max_length=15)),
                ('secret_key', models.CharField(max_length=255)),
                ('is_enabled', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'two_factor_auth',
                'unique_together': {('user', 'method')},
            },
        ),
    ]
